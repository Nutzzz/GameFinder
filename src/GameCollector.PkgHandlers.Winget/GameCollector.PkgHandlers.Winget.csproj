<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <Description>Library for finding installed apps and available game packages via Windows Package Manager.</Description>
        <PackageTags>winget windows-package-manager games</PackageTags>
        <TargetFramework>net8.0-windows10.0.19041.0</TargetFramework>
        <TargetPlatformMinVersion>10.0.19041.0</TargetPlatformMinVersion>
        <Platforms>x64</Platforms>
    </PropertyGroup>

    <!--
    CsWinRT properties:
    https://github.com/microsoft/CsWinRT/blob/master/nuget/readme.md
    -->
    <PropertyGroup>
        <CsWinRTWindowsMetadata>10.0.19041.0</CsWinRTWindowsMetadata>
        <CsWinRTIncludes>Microsoft.Management.Deployment</CsWinRTIncludes>
    </PropertyGroup>

    <ItemGroup>
        <CsWinRTInputs Include="$(TargetDir)\Microsoft.Management.Deployment.winmd" />
        <Content Include="$(TargetDir)\Microsoft.Management.Deployment.winmd" Link="Microsoft.Management.Deployment.winmd" CopyToOutputDirectory="PreserveNewest" />
        <Content Include="$(TargetDir)\winrtact.dll" Link="winrtact.dll" CopyToOutputDirectory="PreserveNewest" />
        <!--<Content Include="$(TargetDir)\Microsoft.Management.Configuration.dll" Link="Microsoft.Management.Configuration.dll" CopyToOutputDirectory="PreserveNewest" />-->
        <!--<Content Include="$(TargetDir)\Microsoft.Management.Configuration.winmd" Link="Microsoft.Management.Configuration.winmd" CopyToOutputDirectory="PreserveNewest" />-->
    </ItemGroup>

    <ItemGroup>
		<!--<PackageReference Include="Microsoft.Management.Infrastructure" />-->
        <PackageReference Include="Microsoft.Windows.CsWinRT" />
        <PackageReference Include="Microsoft.Windows.CsWin32">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
        </PackageReference>

        <!--
        Microsoft.WindowsPackageManager.ComInterop nuget targets .NET Framework:
        https://www.nuget.org/packages/Microsoft.WindowsPackageManager.ComInterop#readme-body-tab
        To workaround this issue in this .net project:
        - Suppress warning 1701 (Package not compatible)
        - Do not include nuget assets
        - Generate a property for this package so the path can be referenced
        - Copy the WINMD to the $(TargetDir) before the build starts
        - Feed the $(TargetDir)\WINMD path to CsWinRT in order to generate the projected classes
        NOTE: Suppressing the warning only is not enough as this will cause CoreClrInitFailure (0x80008089) error.
        -->
        <PackageReference Include="Microsoft.WindowsPackageManager.ComInterop">
            <NoWarn>NU1701</NoWarn>
            <GeneratePathProperty>true</GeneratePathProperty>
            <IncludeAssets>none</IncludeAssets>
            <WindowsAppSdkUndockedRegFreeWinRTInitialize>false</WindowsAppSdkUndockedRegFreeWinRTInitialize>
        </PackageReference>
        <PackageReference Include="Microsoft.WindowsPackageManager.InProcCom">
            <NoWarn>NU1701</NoWarn>
            <GeneratePathProperty>true</GeneratePathProperty>
            <IncludeAssets>none</IncludeAssets>
        </PackageReference>
		<!--
        <PackageReference Include="Microsoft.WindowsPackageManager.Configuration">
            <GeneratePathProperty>True</GeneratePathProperty>
        </PackageReference>
        <PackageReference Include="Microsoft.WindowsPackageManager.Configuration.OutOfProc">
            <GeneratePathProperty>True</GeneratePathProperty>
        </PackageReference>
        <PackageReference Include="Microsoft.WindowsPackageManager.Utils" />
        -->
    </ItemGroup>

    <ItemGroup>
        <ProjectReference Include="..\GameFinder.Common\GameFinder.Common.csproj" />
        <ProjectReference Include="..\GameFinder.RegistryUtils\GameFinder.RegistryUtils.csproj" />
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="TransparentValueObjects" PrivateAssets="all" OutputItemType="Analyzer" ReferenceOutputAssembly="false" />
    </ItemGroup>

    <ItemGroup>
        <InternalsVisibleTo Include="GameCollector.PkgHandlers.Winget.Tests" />
    </ItemGroup>

    <ItemGroup>
      <None Update="Microsoft.Management.Deployment.winmd">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </None>
    </ItemGroup>

    <Target Name="CopyWinmdToTargetDir" BeforeTargets="BeforeBuild">
		<Copy SourceFiles="$(PkgMicrosoft_WindowsPackageManager_InProcCom)\lib\Microsoft.Management.Deployment.winmd" DestinationFolder="$(TargetDir)" />
		<Copy SourceFiles="$(PkgMicrosoft_WindowsPackageManager_ComInterop)\runtimes\win10-$(Platform)\native\winrtact.dll" DestinationFolder="$(TargetDir)" />
        <!--
        <Copy SourceFiles="$(PkgMicrosoft_WindowsPackageManager_Configuration)\runtimes\win10-$(Platform)\native\Microsoft.Management.Configuration.dll" DestinationFolder="$(TargetDir)" />
        <Copy SourceFiles="$(PkgMicrosoft_WindowsPackageManager_Configuration)\runtimes\win10-$(Platform)\native\Microsoft.Management.Configuration.winmd" DestinationFolder="$(TargetDir)" />
        <Copy SourceFiles="$(PkgMicrosoft_WindowsPackageManager_ConfigurationOutOfProc)\runtimes\win10-$(Platform)\native\Microsoft.Management.Configuration.dll" DestinationFolder="$(TargetDir)" />
        <Copy SourceFiles="$(PkgMicrosoft_WindowsPackageManager_ConfigurationOutOfProc)\runtimes\win10-$(Platform)\native\Microsoft.Management.Configuration.winmd" DestinationFolder="$(TargetDir)" />
        <Copy SourceFiles="$(PkgMicrosoft_WindowsPackageManager_InProcCom)\lib\Microsoft.Management.Deployment.winmd" DestinationFolder="$(TargetDir)" />
        -->
	</Target>
</Project>
